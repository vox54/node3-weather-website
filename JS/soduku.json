{ "cell": {
    "index": 1,
    "line": 1,
    "row": 1,
    "block": 1,
    "solutionSet": [0,1,2,3,4,5,6,7,8,9]
    }
}

{   "lineSum": [0,1,2,3,4,5,6,7,8,9], 
    "rowSum":[],
    "blockSum":[],
    "lineOffset":[0,0,10,20,30,40,50,60,70,80],
    "rowOffset":[0,0,1,2,3,4,5,6,7,8],
    "blockOffset":[0,0,2,4,28,30,32,55,57,59],
    "blockInc": "(abs(idx / 27)+1) + (idx % 27)",
    "lineInc": "idx+1",
    "rowInc": "idx+9",
    "ssPointer": [],
    "altPointer": []
}


// could find the offset to the set by comparing the vlues in the offset, 
// example, or by sort and retirving on ss type 
// could recreate the cell portion of the file each time.
// try to define as much as you can,
// right code to create cell components
// need a documnet to archive store and recreate games.
// need a way to display grid and log panels
